{"id":"../../node_modules/tsparticles/Core/Particles.js","dependencies":[{"name":"/home/jaygupta0091/Desktop/cryptochain/package.json","includedInParent":true,"mtime":1625748768110},{"name":"/home/jaygupta0091/Desktop/cryptochain/node_modules/tsparticles/package.json","includedInParent":true,"mtime":1625632146699},{"name":"./Particle","loc":{"line":4,"column":27},"parent":"/home/jaygupta0091/Desktop/cryptochain/node_modules/tsparticles/Core/Particles.js","resolved":"/home/jaygupta0091/Desktop/cryptochain/node_modules/tsparticles/Core/Particle.js"},{"name":"../Utils","loc":{"line":5,"column":24},"parent":"/home/jaygupta0091/Desktop/cryptochain/node_modules/tsparticles/Core/Particles.js","resolved":"/home/jaygupta0091/Desktop/cryptochain/node_modules/tsparticles/Utils/index.js"},{"name":"./Particle/InteractionManager","loc":{"line":6,"column":37},"parent":"/home/jaygupta0091/Desktop/cryptochain/node_modules/tsparticles/Core/Particles.js","resolved":"/home/jaygupta0091/Desktop/cryptochain/node_modules/tsparticles/Core/Particle/InteractionManager.js"},{"name":"../Options/Classes/Particles/ParticlesOptions","loc":{"line":7,"column":35},"parent":"/home/jaygupta0091/Desktop/cryptochain/node_modules/tsparticles/Core/Particles.js","resolved":"/home/jaygupta0091/Desktop/cryptochain/node_modules/tsparticles/Options/Classes/Particles/ParticlesOptions.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particles = void 0;\nconst Particle_1 = require(\"./Particle\");\nconst Utils_1 = require(\"../Utils\");\nconst InteractionManager_1 = require(\"./Particle/InteractionManager\");\nconst ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nclass Particles {\n    constructor(container) {\n        this.container = container;\n        this.nextId = 0;\n        this.array = [];\n        this.limit = 0;\n        this.linksFreq = new Map();\n        this.trianglesFreq = new Map();\n        this.interactionManager = new InteractionManager_1.InteractionManager(container);\n        const canvasSize = this.container.canvas.size;\n        this.linksColors = new Map();\n        this.quadTree = new Utils_1.QuadTree(new Utils_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n    }\n    get count() {\n        return this.array.length;\n    }\n    init() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.linksFreq = new Map();\n        this.trianglesFreq = new Map();\n        let handled = false;\n        for (const particle of options.manualParticles) {\n            const pos = particle.position\n                ? {\n                    x: (particle.position.x * container.canvas.size.width) / 100,\n                    y: (particle.position.y * container.canvas.size.height) / 100,\n                }\n                : undefined;\n            this.addParticle(pos, particle.options);\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n        if (options.infection.enable) {\n            for (let i = 0; i < options.infection.infections; i++) {\n                const notInfected = this.array.filter((p) => p.infecter.infectionStage === undefined);\n                const infected = Utils_1.Utils.itemFromArray(notInfected);\n                infected.infecter.startInfection(0);\n            }\n        }\n        this.interactionManager.init();\n        container.pathGenerator.init();\n    }\n    redraw() {\n        this.clear();\n        this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    removeAt(index, quantity, override) {\n        if (index >= 0 && index <= this.count) {\n            for (const particle of this.array.splice(index, quantity !== null && quantity !== void 0 ? quantity : 1)) {\n                particle.destroy(override);\n            }\n        }\n    }\n    remove(particle, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, override);\n    }\n    update(delta) {\n        const container = this.container;\n        const particlesToDelete = [];\n        container.pathGenerator.update();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.update !== undefined) {\n                plugin.update(delta);\n            }\n        }\n        for (const particle of this.array) {\n            const resizeFactor = this.container.canvas.resizeFactor;\n            if (resizeFactor) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.move(delta);\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Utils_1.Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        this.interactionManager.externalInteract(delta);\n        for (const particle of this.container.particles.array) {\n            particle.update(delta);\n            if (!particle.destroyed && !particle.spawning) {\n                this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    draw(delta) {\n        const container = this.container;\n        container.canvas.clear();\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new Utils_1.QuadTree(new Utils_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.array) {\n            p.draw(delta);\n        }\n    }\n    clear() {\n        this.array = [];\n    }\n    push(nb, mouse, overrideOptions) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions);\n        }\n        this.pushing = false;\n    }\n    addParticle(position, overrideOptions) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const limit = options.particles.number.limit * container.density;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this.pushParticle(position, overrideOptions);\n    }\n    addSplitParticle(parent) {\n        const splitOptions = parent.options.destroy.split;\n        const options = new ParticlesOptions_1.ParticlesOptions();\n        options.load(parent.options);\n        const factor = Utils_1.NumberUtils.getRangeValue(splitOptions.factor.value);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitOptions.particles);\n        const offset = splitOptions.sizeOffset ? Utils_1.NumberUtils.setRangeValue(-parent.size.value, parent.size.value) : 0;\n        const position = {\n            x: parent.position.x + Utils_1.NumberUtils.randomInRange(offset),\n            y: parent.position.y + Utils_1.NumberUtils.randomInRange(offset),\n        };\n        return this.pushParticle(position, options, (particle) => {\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = parent.splitCount + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    removeQuantity(quantity) {\n        this.removeAt(0, quantity);\n    }\n    getLinkFrequency(p1, p2) {\n        const key = `${Math.min(p1.id, p2.id)}_${Math.max(p1.id, p2.id)}`;\n        let res = this.linksFreq.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.linksFreq.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.trianglesFreq.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.trianglesFreq.set(key, res);\n        }\n        return res;\n    }\n    setDensity() {\n        this.applyDensity(this.container.actualOptions.particles);\n    }\n    applyDensity(options) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number;\n        const densityFactor = this.initDensityFactor(numberOptions.density);\n        const optParticlesNumber = numberOptions.value;\n        const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n        const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor;\n        const particlesCount = this.count;\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber);\n        }\n    }\n    initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element;\n        const pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n    pushParticle(position, overrideOptions, initializer) {\n        try {\n            const particle = new Particle_1.Particle(this.nextId, this.container, position, overrideOptions);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.nextId++;\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\nexports.Particles = Particles;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/tsparticles/Core/Particles.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}}],"sources":{"../../node_modules/tsparticles/Core/Particles.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particles = void 0;\nconst Particle_1 = require(\"./Particle\");\nconst Utils_1 = require(\"../Utils\");\nconst InteractionManager_1 = require(\"./Particle/InteractionManager\");\nconst ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nclass Particles {\n    constructor(container) {\n        this.container = container;\n        this.nextId = 0;\n        this.array = [];\n        this.limit = 0;\n        this.linksFreq = new Map();\n        this.trianglesFreq = new Map();\n        this.interactionManager = new InteractionManager_1.InteractionManager(container);\n        const canvasSize = this.container.canvas.size;\n        this.linksColors = new Map();\n        this.quadTree = new Utils_1.QuadTree(new Utils_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n    }\n    get count() {\n        return this.array.length;\n    }\n    init() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.linksFreq = new Map();\n        this.trianglesFreq = new Map();\n        let handled = false;\n        for (const particle of options.manualParticles) {\n            const pos = particle.position\n                ? {\n                    x: (particle.position.x * container.canvas.size.width) / 100,\n                    y: (particle.position.y * container.canvas.size.height) / 100,\n                }\n                : undefined;\n            this.addParticle(pos, particle.options);\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n        if (options.infection.enable) {\n            for (let i = 0; i < options.infection.infections; i++) {\n                const notInfected = this.array.filter((p) => p.infecter.infectionStage === undefined);\n                const infected = Utils_1.Utils.itemFromArray(notInfected);\n                infected.infecter.startInfection(0);\n            }\n        }\n        this.interactionManager.init();\n        container.pathGenerator.init();\n    }\n    redraw() {\n        this.clear();\n        this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    removeAt(index, quantity, override) {\n        if (index >= 0 && index <= this.count) {\n            for (const particle of this.array.splice(index, quantity !== null && quantity !== void 0 ? quantity : 1)) {\n                particle.destroy(override);\n            }\n        }\n    }\n    remove(particle, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, override);\n    }\n    update(delta) {\n        const container = this.container;\n        const particlesToDelete = [];\n        container.pathGenerator.update();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.update !== undefined) {\n                plugin.update(delta);\n            }\n        }\n        for (const particle of this.array) {\n            const resizeFactor = this.container.canvas.resizeFactor;\n            if (resizeFactor) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.move(delta);\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Utils_1.Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        this.interactionManager.externalInteract(delta);\n        for (const particle of this.container.particles.array) {\n            particle.update(delta);\n            if (!particle.destroyed && !particle.spawning) {\n                this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    draw(delta) {\n        const container = this.container;\n        container.canvas.clear();\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new Utils_1.QuadTree(new Utils_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.array) {\n            p.draw(delta);\n        }\n    }\n    clear() {\n        this.array = [];\n    }\n    push(nb, mouse, overrideOptions) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions);\n        }\n        this.pushing = false;\n    }\n    addParticle(position, overrideOptions) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const limit = options.particles.number.limit * container.density;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this.pushParticle(position, overrideOptions);\n    }\n    addSplitParticle(parent) {\n        const splitOptions = parent.options.destroy.split;\n        const options = new ParticlesOptions_1.ParticlesOptions();\n        options.load(parent.options);\n        const factor = Utils_1.NumberUtils.getRangeValue(splitOptions.factor.value);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitOptions.particles);\n        const offset = splitOptions.sizeOffset ? Utils_1.NumberUtils.setRangeValue(-parent.size.value, parent.size.value) : 0;\n        const position = {\n            x: parent.position.x + Utils_1.NumberUtils.randomInRange(offset),\n            y: parent.position.y + Utils_1.NumberUtils.randomInRange(offset),\n        };\n        return this.pushParticle(position, options, (particle) => {\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = parent.splitCount + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    removeQuantity(quantity) {\n        this.removeAt(0, quantity);\n    }\n    getLinkFrequency(p1, p2) {\n        const key = `${Math.min(p1.id, p2.id)}_${Math.max(p1.id, p2.id)}`;\n        let res = this.linksFreq.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.linksFreq.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.trianglesFreq.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.trianglesFreq.set(key, res);\n        }\n        return res;\n    }\n    setDensity() {\n        this.applyDensity(this.container.actualOptions.particles);\n    }\n    applyDensity(options) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number;\n        const densityFactor = this.initDensityFactor(numberOptions.density);\n        const optParticlesNumber = numberOptions.value;\n        const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n        const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor;\n        const particlesCount = this.count;\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber);\n        }\n    }\n    initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element;\n        const pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n    pushParticle(position, overrideOptions, initializer) {\n        try {\n            const particle = new Particle_1.Particle(this.nextId, this.container, position, overrideOptions);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.nextId++;\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\nexports.Particles = Particles;\n"},"lineCount":265}},"error":null,"hash":"3a88ec69f5eac8ad6eab81cfa04efb6a","cacheData":{"env":{}}}